image: git.gittos.net:5050/tgittos/gittos.net/runner-base

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE/api:$CI_COMMIT_SHORT_SHA
  CONTAINER_TAGGED_IMAGE: $CI_REGISTRY_IMAGE/api:$CI_COMMIT_TAG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/api:latest

services:
  - docker:dind

before_script:
    - docker version
    - docker-compose version
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

stages:
  - build
  - test
  - release
  - deploy-staging
  - deploy-production

build:
  stage: build
  script:
    - npm run build api
    - docker tag api $CONTAINER_TEST_IMAGE
    - docker push $CONTAINER_TEST_IMAGE
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'

test:
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - npm run start
    - sleep 30
    - npm run db:init
    - npm run test
    - status=$?
    - npm run down
    - echo "Test run status: $status"
    - exit $status
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'

release:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_TAGGED_IMAGE
    - docker push $CONTAINER_TAGGED_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_REF_NAME == "master"'
      when: always
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: manual
