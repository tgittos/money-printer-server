services:
  rproxy:
    image: git.gittos.net:5050/money-printer/money-printer-infrastructure/mp-rproxy
    ports:
      - 80:80
    environment:
      NGROK_HOST: ngrok
      MATOMO_HOST: matomo
      PROMETHEUS_HOST: prometheus
      HASURA_HOST: hasura
      API_HOST: api
      STONKS_HOST: stonks
    depends_on:
      - ngrok
      - matomo
      - prometheus
      - hasura
      - api
      - stonks
  ngrok:
    image: "wernight/ngrok"
    env_file:
      - .env.dev
    environment:
      - NGROK_HEADER="rewrite"
      - NGROK_SUBDOMAIN=tgmp
      - NGROK_PORT=api
      - NGROK_DEBUG=true
  redis:
    image: "redis:alpine"
  matomo:
    image: git.gittos.net:5050/money-printer/money-printer-infrastructure/mp-matomo
    environment:
      MP_DB_HOST: mysql
    env_file:
      - .env.dev
    depends_on: [ "mysql" ]
  prometheus:
    image: git.gittos.net:5050/money-printer/money-printer-infrastructure/mp-prometheus
    entrypoint: [ "/bin/sh", "prometheus.sh" ]
  pg:
    image: timescale/timescaledb:latest-pg12
    restart: always
    volumes:
      - pg-data:/var/lib/postgresql/data
    env_file:
      - .env.dev
    ports:
      - 5432:5432
  mysql:
    image: "mysql/mysql-server:5.7"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_HOST: "%"
    env_file:
      - .env.dev
    ports:
      - 3306:3306
  hasura:
    image: git.gittos.net:5050/money-printer/money-printer-infrastructure/mp-hasura
    # image: hasura/graphql-engine:latest.cli-migrations-v3
    restart: always
    volumes:
      - ./src/hasura:/hasura
    env_file:
      - .env.dev
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:$POSTGRES_PASSWORD@pg:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      # HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura/migrations
      HASURA_GRAPHQL_METADATA_DIR: /hasura/metadata
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: hasura
    depends_on: ["pg"]
  api:
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - ./docs:/app/docs
      - ./src:/app/src
      - ./bin:/app/bin
      - ./logs:/app/logs
    environment:
      MP_REDIS__HOST: redis
      MP_API__HOST: pg
      MP_WEBHOOK_HOST: ngrok
    env_file:
      - .env.dev
    depends_on: [ "redis", "pg", "ngrok", "matomo", "prometheus", "stonks" ]
    image: "git.gittos.net:5050/money-printer/money-printer-server/mp-api"
    entrypoint:
      [
        "python",
        "src/api/app.py",
        "&&",
        "tail",
        "-f",
        "logs/mp.log"
      ]
  stonks:
    image: git.gittos.net:5050/money-printer/money-printer-server/mp-api
    environment:
      MP_REDIS__HOST: redis
      MP_STONKS__HOST: pg
    volumes:
      - ./docs:/app/docs
      - ./src:/app/src
      - ./bin:/app/bin
      - ./logs:/app/logs
    env_file:
      - .env.dev
    depends_on: [ "redis", "pg" ]
    entrypoint:
      [
        "python",
        "src/stonk_server/app.py",
        "&&",
        "tail",
        "-f",
        "logs/mp.log"
      ]
  task-runner:
    image: git.gittos.net:5050/money-printer/money-printer-server/mp-api
    environment:
      MP_REDIS__HOST: redis
      MP_API__HOST: pg
    env_file:
      - .env.dev
    volumes:
      - ./src:/app/src
      - ./bin:/app/bin
      - ./logs:/app/logs
    depends_on: [ "redis", "pg" ]
    entrypoint: [ "python", "src/task_runner.py" ]
  scheduler:
    image: git.gittos.net:5050/money-printer/money-printer-server/mp-api
    environment:
      MP_REDIS__HOST: "redis"
      MP_API__HOST: pg
    env_file:
      - .env.dev
    volumes:
      - ./src:/app/src
      - ./bin:/app/bin
      - ./logs:/app/logs
    depends_on: [ "redis", "pg" ]
    entrypoint:
      [
        "rqscheduler",
        "--host",
        redis,
        "--port",
        "6379",
        "--db",
        "0"
      ]

volumes:
  mysql-data: null
  pg-data: null
  matomo-config: null
