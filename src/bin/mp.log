 * setting env to sandbox
 * changing pwd to /mnt/c/Users/Tim/src/money-printer/src
 * augmenting path with core
 * path: ['/mnt/c/Users/Tim/src/money-printer/src/server/services/client_bus', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/mnt/c/Users/Tim/src/money-printer/src/.venv/lib/python3.8/site-packages', '/mnt/c/Users/Tim/src/money-printer/src']
 * augmenting money-printer websocket server with message handlers
 * running money-printer websocket server with config: {'host': 'localhost', 'port': '8000', 'secret': 'omg money printer go brr hahaha'}
 * Serving Flask app 'websocket_server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 * setting env to sandbox
 * changing pwd to /mnt/c/Users/Tim/src/money-printer/src
 * augmenting path with core
 * path: ['/mnt/c/Users/Tim/src/money-printer/src/server/services/task_runner', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/mnt/c/Users/Tim/src/money-printer/src/.venv/lib/python3.8/site-packages', '/mnt/c/Users/Tim/src/money-printer/src']
 * task runner listening for jobs
 * setting env to sandbox
 * changing pwd to /mnt/c/Users/Tim/src/money-printer/src
 * augmenting path with core
 * path: ['/mnt/c/Users/Tim/src/money-printer/src/server/services/api', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/mnt/c/Users/Tim/src/money-printer/src/.venv/lib/python3.8/site-packages', '/mnt/c/Users/Tim/src/money-printer/src']
 * running money-printer api server with config: {'host': 'localhost', 'port': '8000', 'secret': 'omg money printer go brr hahaha'}
 * loading routes
 * registering auth blueprint
 * registering plaid oauth blueprint
 * registering accounts blueprint
 * registering symbol blueprint
 * Serving Flask app 'api_server' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 * setting env to sandbox
 * changing pwd to /mnt/c/Users/Tim/src/money-printer/src
 * augmenting path with core
 * path: ['/mnt/c/Users/Tim/src/money-printer/src/server/services/data_server', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/mnt/c/Users/Tim/src/money-printer/src/.venv/lib/python3.8/site-packages', '/mnt/c/Users/Tim/src/money-printer/src']
 * sse upstream online
 * historical upstream online
 * data-server listening for commands
